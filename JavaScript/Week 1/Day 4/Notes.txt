Booleans are values that can be only one of two things: true or false.
================

function test (myCondition) {
  if (myCondition) {
    return "It was true";
  }
  return "It was false";
}

test(true);
test(false);
=========================
function equalityTest(myVal) {
  if (myVal == 10) {
    return "Equal";
  }
  return "Not Equal";
}
=========================
Strict equality (===) is the counterpart to the equality operator (==). However, unlike the equality operator, which attempts to convert both values being compared to a common type, the strict equality operator does not perform a type conversion

The strict inequality operator (!==) is the logical opposite of the strict equality operator. It means "Strictly Not Equal" and returns false where strict equality would return true and vice versa. The strict inequality operator will not convert data types.

Sometimes you will need to test more than one thing at a time. The logical and operator (&&) returns true if and only if the operands to the left and right of it are true.

if (num > 5 && num < 10) {
  return "Yes";
}
return "No";

The logical or operator (||) returns true if either of the operands is true. Otherwise, it returns false.

The logical or operator is composed of two pipe symbols: (||). This can typically be found between your Backspace and Enter keys.


function testLogicalOr(val) {
  // Only change code below this line

  if (val > 20  || val < 10) {
    return "Outside";
  }

 

  // Only change code above this line
  return "Inside";
}

testLogicalOr(15);








What were the important features of the day?
if statements
What activities were beneficial?
all
What activities (if any) were too easy?
none
What activities need more time?
if statements
























